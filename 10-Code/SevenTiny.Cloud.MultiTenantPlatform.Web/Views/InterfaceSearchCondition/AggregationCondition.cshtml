@using SevenTiny.Cloud.MultiTenantPlatform.DomainModel.Entities
@using SevenTiny.Cloud.MultiTenantPlatform.DomainModel.Enums;

@{
    ViewData["Title"] = "AggregateCondition";
    //Layout = "~/Views/Shared/_Layout.cshtml";
    List<ConditionAggregation> entities = ViewData["AggregationConditions"] as List<ConditionAggregation> ?? new List<ConditionAggregation>();
    List<MetaField> metafields = ViewData["MetaFields"] as List<MetaField> ?? new List<MetaField>();
    int id = Convert.ToInt32(ViewData["InterfaceSearchConditionId"]);
}
<link href="~/css/jqueryTree.css" rel="stylesheet" />

<nav class="breadcrumb">
    <i class="Hui-iconfont">&#xe67f;</i> 首页
    <span class="c-gray en">&gt;</span>
    标准接口
    <span class="c-gray en">&gt;</span>
    搜索条件
    <span class="c-gray en">&gt;</span>
    组织条件
    <a class="btn btn-success radius r" style="line-height:1.6em;margin-top:3px" href="javascript:location.replace(location.href);" title="刷新"><i class="Hui-iconfont">&#xe68f;</i></a>
</nav>

<article class="page-container">
    <div class="row cl" style="margin-top:10px;">
        <div class="col-xs-6 col-sm-6">
            <input type="text" class="input-text" value="1" placeholder="" id="" name="name">
        </div>
        <div class="tree well col-xs-6 col-sm-6">
            <center><label>查询条件结构展示</label></center>
            <ul id="rootUL"></ul>
        </div>
    </div>
</article>

@Html.Partial($"~/Views/Shared/_FooterScripts.cshtml")
<script>
    $(function () {

        var json =
            [{
                "name": "||",
                "interfaceSearchConditionId": "",
                "id": "101",
                "parentId": "-1",
                "icon": "",
                "nodeType": "连接符/表达式",
                "fieldCode": "Age",
                "fieldName": "年龄",
                "condition": ">(枚举大于)",
                "value": "?",
                "valueType": "?(?表示参数)",
                "child": [
                    {
                        "name": "&&",
                        "icon": "",
                        "id": "103",
                        "parentId": "101",
                        "child": [
                            {
                                "name": "Age > 0",
                                "id": "105",
                                "icon": "",
                                "parentId": "103",
                                "child": []
                            },
                            {
                                "name": "Age < 10",
                                "id": "104",
                                "icon": "",
                                "parentId": "103",
                                "child": []
                            }
                        ]
                    },
                    {
                        "name": "DataTime > 20100001",
                        "id": "102",
                        "icon": "",
                        "parentId": "101",
                        "child": []
                    }
                ]
            }];


        function tree(data) {
            for (var i = 0; i < data.length; i++) {
                var data2 = data[i];
                if (data[i].parentId == -1) {
                    $("#rootUL").append("<li data-name='" + data[i].id + "'><span><i class=''></i> " + data[i].name + "</span></li>");
                } else {
                    var children = $("li[data-name='" + data[i].parentId + "']").children("ul");
                    if (children.length == 0) {
                        $("li[data-name='" + data[i].parentId + "']").append("<ul></ul>")
                    }
                    $("li[data-name='" + data[i].parentId + "'] > ul").append(
                        "<li data-name='" + data[i].id + "'>" +
                        "<span>" +
                        "<i class=''></i> " +
                        data[i].name +
                        "</span>" +
                        "</li>")
                }
                for (var j = 0; j < data[i].child.length; j++) {
                    var child = data[i].child[j];
                    var children = $("li[data-name='" + child.parentId + "']").children("ul");
                    if (children.length == 0) {
                        $("li[data-name='" + child.parentId + "']").append("<ul></ul>")
                    }
                    $("li[data-name='" + child.parentId + "'] > ul").append(
                        "<li data-name='" + child.id + "'>" +
                        "<span>" +
                        "<i class=''></i> " +
                        child.name +
                        "</span>" +
                        "</li>")
                    var child2 = data[i].child[j].child;
                    tree(child2)
                }
                tree(data[i]);
            }
        }

        tree(json)

        $('.tree li:has(ul)').addClass('parent_li').find(' > span').attr('title', '关闭');
        $('.tree li.parent_li > span').on('click', function (e) {
            var children = $(this).parent('li.parent_li').find(' > ul > li');
            if (children.is(":visible")) {
                children.hide('fast');
            } else {
                children.show('fast');
            }
            e.stopPropagation();
        });
    });
</script>
